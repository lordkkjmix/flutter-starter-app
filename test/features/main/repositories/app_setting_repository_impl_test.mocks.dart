// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_starter_app/test/features/main/repositories/app_setting_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_starter_app/core/providers/network_provider.dart'
    as _i3;
import 'package:flutter_starter_app/features/main/data/datasources/app_setting_local_data_source.dart'
    as _i5;
import 'package:flutter_starter_app/features/main/data/datasources/app_setting_remote_data_source.dart'
    as _i7;
import 'package:flutter_starter_app/features/main/data/models/app_setting_model.dart'
    as _i6;
import 'package:flutter_starter_app/features/main/data/models/device_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDeviceModel_0 extends _i1.SmartFake implements _i2.DeviceModel {
  _FakeDeviceModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkProvider extends _i1.Mock implements _i3.NetworkProvider {
  MockNetworkProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Stream<bool> get onConnectivityChanged => (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i4.Stream<bool>.empty(),
      ) as _i4.Stream<bool>);

  @override
  _i4.Future<bool> get getInternetStatus => (super.noSuchMethod(
        Invocation.getter(#getInternetStatus),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [AppSettingLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppSettingLocalDataSource extends _i1.Mock
    implements _i5.AppSettingLocalDataSource {
  MockAppSettingLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DeviceModel> getDevice() => (super.noSuchMethod(
        Invocation.method(
          #getDevice,
          [],
        ),
        returnValue: _i4.Future<_i2.DeviceModel>.value(_FakeDeviceModel_0(
          this,
          Invocation.method(
            #getDevice,
            [],
          ),
        )),
      ) as _i4.Future<_i2.DeviceModel>);

  @override
  _i4.Future<List<_i6.AppSettingModel>> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i4.Future<List<_i6.AppSettingModel>>.value(
            <_i6.AppSettingModel>[]),
      ) as _i4.Future<List<_i6.AppSettingModel>>);

  @override
  _i4.Future<_i6.AppSettingModel?> getSetting(String? settingIdentifier) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [settingIdentifier],
        ),
        returnValue: _i4.Future<_i6.AppSettingModel?>.value(),
      ) as _i4.Future<_i6.AppSettingModel?>);

  @override
  _i4.Future<void> writeSetting(_i6.AppSettingModel? setting) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeSetting,
          [setting],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> delete(dynamic setting) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [setting],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AppSettingRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppSettingRemoteDataSource extends _i1.Mock
    implements _i7.AppSettingRemoteDataSource {
  MockAppSettingRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i6.AppSettingModel>> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i4.Future<List<_i6.AppSettingModel>>.value(
            <_i6.AppSettingModel>[]),
      ) as _i4.Future<List<_i6.AppSettingModel>>);

  @override
  _i4.Future<_i6.AppSettingModel?> getSetting(String? settingIdentifier) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSetting,
          [settingIdentifier],
        ),
        returnValue: _i4.Future<_i6.AppSettingModel?>.value(),
      ) as _i4.Future<_i6.AppSettingModel?>);
}
